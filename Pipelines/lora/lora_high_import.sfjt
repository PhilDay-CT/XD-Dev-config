//sfSig:{"sig": "3046022100b3a467c8f9355309d84d84a54b0dab4004a6ca5d160455d446af4a582a4bf0ab022100945274db2fa758867cc0d58568ea3a33beb23d17d8fc65aa7b09c8f41b1e78a6", "certPEM": "-----BEGIN CERTIFICATE-----$!$MIIDETCCAregAwIBAgIBATAKBggqhkjOPQQDAjBsMQswCQYDVQQGEwJVSzEfMB0G$!$A1UECgwWQ29uZmlndXJlZCBUaGluZ3MgTHRkLjENMAsGA1UECwwEY3R4ZDEOMAwG$!$A1UECwwFVXNlcnMxHTAbBgNVBAMMFGN0eGQtdXNlcnMtYWRtaW5zLWNhMB4XDTI0$!$MDgxNjE4MDkxN1oXDTM0MDgxNDE4MDkxN1owYDELMAkGA1UEBhMCVUsxHzAdBgNV$!$BAoMFkNvbmZpZ3VyZWQgVGhpbmdzIEx0ZC4xDTALBgNVBAsMBGN0eGQxDjAMBgNV$!$BAsMBVVzZXJzMREwDwYDVQQDDAhjdC1hZG1pbjBZMBMGByqGSM49AgEGCCqGSM49$!$AwEHA0IABAT8rSVBw5oFDMkdkfez3rM3Na8gSIb3SSlovkoA6T7J1vDueZyqrndI$!$aDbvQjKDYxT1p7DdsB7etGP3WDocEXOjggFUMIIBUDCBjgYIKwYBBQUHAQEEgYEw$!$fzBFBggrBgEFBQcwAoY5aHR0cDovL2N0eGQtdXNlcnMtYWRtaW5zLWNhLmN0eGQv$!$Y3R4ZC11c2Vycy1hZG1pbnMtY2EuY3J0MDYGCCsGAQUFBzABhipodHRwOi8vb2Nz$!$cC5jdHhkLXVzZXJzLWFkbWlucy1jYS5jdHhkOjkwODEwHwYDVR0jBBgwFoAUEu3Q$!$qtIP3h8krX5fHcLRiKhyIYIwDAYDVR0TAQH/BAIwADBKBgNVHR8EQzBBMD+gPaA7$!$hjlodHRwOi8vY3R4ZC11c2Vycy1hZG1pbnMtY2EuY3R4ZC9jdHhkLXVzZXJzLWFk$!$bWlucy1jYS5jcmwwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgeA$!$MB0GA1UdDgQWBBSqYd9d6yD2b9hzT37PD3ZoIe3D2DAKBggqhkjOPQQDAgNIADBF$!$AiEApvBDT8tEWIWefweWT1fcWZ/dt+jEUELDrxlZbqFrFE0CIHKsX7gB5bjq926w$!$SBRfgBLzqVIJl9m35EBBgmrSE5+3$!$-----END CERTIFICATE-----$!$", "description": "", "timestamp":"1755526950700", "timelimit":"0"}
//sfTimestamp:1755526950700
//sfLabel:/opt/ct/signing/files/Pipelines/lora/lora_high_import.sfjt

//
// Example Telemetry Pipeline for Lora Sensors - High
//

let
    SRC_DIR: env(CT_HOME) + '/src/',
    TEMPLATE_DIR: env(CT_HOME) + '/templates/',

    // Templates configured for this domain
    XD_RECEIVER:       require($TEMPLATE_DIR + 'XD_Receiver.sfjs'),
    SCHEMA_CHECKER:    require($TEMPLATE_DIR + 'Schema_Checker.sfjs'),
    FUNCTION:          require($TEMPLATE_DIR + 'Jsonata.sfjs'),
    MQTT_SENDER:       require($TEMPLATE_DIR + 'MQTT_Sender.sfjs'),
    TB_SENDER:         require($TEMPLATE_DIR + 'ThingsBoard_Sender.sfjs'),

in
{

    Receiver: $XD_RECEIVER << {
        id: 'lora',
        targets: {
            default: SchemaCheck,
        },
    },
    
    SchemaCheck: $SCHEMA_CHECKER << {
        targets: {
            default: [MQTT, ThingsBoard]
        },
    },

    // Sent to MQTT.  As this is the last node also 
    // send the pipeline stats
    MQTT: $MQTT_SENDER << {
        format: 'json',
        targets: {
            stats: Stats
        },
    },

    // Get Lora Values as metrics for Thingsboard
    ThingsBoard: $FUNCTION << {
        functions: {default: {name: GetLoRaArrayValues, operation: replace}},
        targets:   {
            default: ThingsBoardSender
        },
    },
    
    ThingsBoardSender: $TB_SENDER,

}
