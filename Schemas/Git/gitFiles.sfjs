//sfSig:{"sig": "3045022038ebd7930f55c0a9e8f3c3601a3523b7fec9e90888fa9a7baaed7b6ca28533c40221009dfad22d1b2919dc81d837dae68cc597b6a037342f5cdec6b8190873513208f7", "certPEM": "-----BEGIN CERTIFICATE-----$!$MIIDETCCAregAwIBAgIBATAKBggqhkjOPQQDAjBsMQswCQYDVQQGEwJVSzEfMB0G$!$A1UECgwWQ29uZmlndXJlZCBUaGluZ3MgTHRkLjENMAsGA1UECwwEY3R4ZDEOMAwG$!$A1UECwwFVXNlcnMxHTAbBgNVBAMMFGN0eGQtdXNlcnMtYWRtaW5zLWNhMB4XDTI0$!$MDgxNjE4MDkxN1oXDTM0MDgxNDE4MDkxN1owYDELMAkGA1UEBhMCVUsxHzAdBgNV$!$BAoMFkNvbmZpZ3VyZWQgVGhpbmdzIEx0ZC4xDTALBgNVBAsMBGN0eGQxDjAMBgNV$!$BAsMBVVzZXJzMREwDwYDVQQDDAhjdC1hZG1pbjBZMBMGByqGSM49AgEGCCqGSM49$!$AwEHA0IABAT8rSVBw5oFDMkdkfez3rM3Na8gSIb3SSlovkoA6T7J1vDueZyqrndI$!$aDbvQjKDYxT1p7DdsB7etGP3WDocEXOjggFUMIIBUDCBjgYIKwYBBQUHAQEEgYEw$!$fzBFBggrBgEFBQcwAoY5aHR0cDovL2N0eGQtdXNlcnMtYWRtaW5zLWNhLmN0eGQv$!$Y3R4ZC11c2Vycy1hZG1pbnMtY2EuY3J0MDYGCCsGAQUFBzABhipodHRwOi8vb2Nz$!$cC5jdHhkLXVzZXJzLWFkbWlucy1jYS5jdHhkOjkwODEwHwYDVR0jBBgwFoAUEu3Q$!$qtIP3h8krX5fHcLRiKhyIYIwDAYDVR0TAQH/BAIwADBKBgNVHR8EQzBBMD+gPaA7$!$hjlodHRwOi8vY3R4ZC11c2Vycy1hZG1pbnMtY2EuY3R4ZC9jdHhkLXVzZXJzLWFk$!$bWlucy1jYS5jcmwwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgeA$!$MB0GA1UdDgQWBBSqYd9d6yD2b9hzT37PD3ZoIe3D2DAKBggqhkjOPQQDAgNIADBF$!$AiEApvBDT8tEWIWefweWT1fcWZ/dt+jEUELDrxlZbqFrFE0CIHKsX7gB5bjq926w$!$SBRfgBLzqVIJl9m35EBBgmrSE5+3$!$-----END CERTIFICATE-----$!$", "description": "", "timestamp":"1755540143110", "timelimit":"0"}
//sfTimestamp:1755540143110
//sfLabel:/opt/ct/signing/files/Schemas/Git/gitFiles.sfjs

//
// Schema for a gitFiles message
//

let
    FILE_NAME: '^[a-zA-Z0-9\\-\\_\\.]*$',
    HEX: '^[A-Fa-f0-9]*$',

    // Pattern for the hash of a file
    GIT_SHA1: {
        type: string,
        pattern: $HEX, 
        maxLength: 40,
        minLength: 40,
    },

    AUTHOR: {
        type: object,
        additionalProperties: false,
        properties: {
            name: {type: string},
            email: {type: string},
            timestamp: {type: integer},
            timezoneOffset: {type: integer}
        },
        required: [name, email]
    },

    COMMIT: {
        type: object,
        additionalProperties: false,
        properties: {
            message: {type: string},
            oid: $GIT_SHA1,
            author: $AUTHOR
        },
        required: [message, oid, author]
    },
    
    METADATA: {
        type: object,
        additionalProperties: false,
        properties: {
            commit: $COMMIT
        },
        required: [commit]
    },

    FILE_MODE: {
        type: string, 
        pattern: '[0-7]', 
        maxLength:3,
        minLength: 3
    },

    FILE_CONTENT :{
        type: string
    },

    FILE_UPDATE: {
        type: object,
        additionalProperties: false,
        properties: {
            content: $FILE_CONTENT,
            mode: $FILE_MODE
        },
        required: [content, mode]
    },

    FILE_UPDATES: {
        type: object,
        additionalProperties: false,
        properties: {
            update: {
                type: object,
                patternProperties: {
                    $FILE_NAME: $FILE_UPDATE
                },
                additionalProperties: false,
            },
            delete: {
                type: array,
                items: {
                    type: string,
                    pattern: $FILE_NAME
                }
            }
        },
        required: [update, delete]
    }

in
{
    other: {
        gitfiles: {
            type: object,
            additionalProperties: false,
            properties: {
                kind: {type: string, const: 'gitfiles'},
                metadata: $METADATA,
                data: $FILE_UPDATES,
                trace: require('./Schemas/System/Templates/Trace.sfjt')
            },
            required: [kind, metadata, data]
        }
    }
}